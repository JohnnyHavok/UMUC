// -- BankService.idl
// -- Justin Smith
// -- CMIS445.6980
// -- Final Project
// -- 03/09/14
// -- CORBA IDL
// -- Build Settings - idlj -Fall

// -- ORB Service

module BankService {
  struct Customer {
    long accountID;
    string lastName;
    string firstName;
    string SSN;
    string pin;
    double checkingBalance;
    double SavingsBalance;
  };

  interface TellerService {
    exception InsufficientFunds { string message; };
    exception AccountAlreadyExist { string message; };
    exception AccountNotFound { string message; };
    exception ShutdownMessage { string message; };

    boolean login (in string userID, in string PIN);
    boolean checkAccount (in long accountID);
    boolean checkPIN (in long accountID, in string PIN) raises (AccountNotFound);

    double deposit (in long accountID, in string accountType, in double amount);
    double withdraw (in long accountID, in string accountType, in double amount) raises (InsufficientFunds);
    double cashCheck (in long accountID, in long checkNumber, in double amount) raises (InsufficientFunds);
    double transfer (in long accountID, in string accountType, in long toAccountID, in string toAccountType, in double amount) raises (InsufficientFunds);

    double getCheckingBalance (in long accountID) raises (AccountNotFound);
    double getSavingsBalance (in long accountID) raises (AccountNotFound);

    long createAccount (in BankService::Customer newCustomer) raises (AccountAlreadyExist);
    long getAccountID (in string SSN) raises (AccountNotFound);
    BankService::Customer getAccount (in long accountID) raises (AccountNotFound);
  };
};
