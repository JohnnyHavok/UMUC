/* 
**  Author: Justin Smith
**  Course: CMIS 420.7980
**  Date:  04/19/14
**  Project 2
*/

SET SERVEROUTPUT ON

-- BEGIN TESTING PROCESS_ORDERS.ADD_ORDER --
BEGIN 
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.ADD_ORDER');
  PROCESS_ORDERS.ADD_ORDER(398, 11598, NULL);
  PROCESS_ORDERS.ADD_ORDER(597, 11598, NULL);
  PROCESS_ORDERS.ADD_ORDER(796, 11621, NULL);
  PROCESS_ORDERS.ADD_ORDER(995, 11690, NULL);
  PROCESS_ORDERS.ADD_ORDER(1194, 11598, NULL);
  PROCESS_ORDERS.ADD_ORDER(398, 11598, NULL);
  PROCESS_ORDERS.ADD_ORDER(398, 11598, NULL);
  commit;
END;
/

-- BEGIN TESTING PROCESS_ORDERS.ADD_ORDER_DETAILS --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.ADD_ORDER_DETAILS');
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1000, 149, 5);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1000, 178, 6);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1001, 149, 5);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1001, 294, 75);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1001, 381, 6);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1001, 410, 15);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1002, 439, 120);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1003, 236, 250);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 236, 500);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 207, 50);
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 265, 500);
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.ADD_ORDER_DETAILS, RESTOCK Functionality');
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 439, 75);
  commit;
END;
/


-- BEGIN TESTING PROCESS_ORDERS.SHIP_ORDER --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.SHIP_ORDER');
  PROCESS_ORDERS.SHIP_ORDER(1000, NULL);
  PROCESS_ORDERS.SHIP_ORDER(1001, NULL);
  commit;
END;
/

-- BEGIN TESTING PROCESS_ORDERS.DELETE_ORDER --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.DELETE_ORDER');
  PROCESS_ORDERS.DELETE_ORDER(1005);
  PROCESS_ORDERS.DELETE_ORDER(1006);
  commit;
END;
/

-- BEGIN TESTING PROCESS_ORDERS.TOTAL_EMP_SALES --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Testing PROCESS_ORDERS.TOTAL_EMP_SALES');
  DBMS_OUTPUT.PUT_LINE(PROCESS_ORDERS.TOTAL_EMP_SALES(11598));
  commit;
END;
/

-- Testing Exceptions in ADD_ORDER --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Breaking ADD_ORDER, Bad Customer Number');
  PROCESS_ORDERS.ADD_ORDER(200, 11598, NULL);
  DBMS_OUTPUT.PUT_LINE('Breaking ADD_ORDER, Bad Employee Number');
  PROCESS_ORDERS.ADD_ORDER(398, 1198, NULL);  
  commit;
END;
/

-- Testing Exceptions in ADD_ORDER_DETAILS --
BEGIN 
  DBMS_OUTPUT.PUT_LINE('Breaking ADD_ORDER_DETAILS, Not enough Quantity');
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 439, 100);
  DBMS_OUTPUT.PUT_LINE('Breaking ADD_ORDER_DETAILS, Bad Order Number');
  PROCESS_ORDERS.ADD_ORDER_DETAILS(258, 439, 1);
  DBMS_OUTPUT.PUT_LINE('Breaking ADD_ORDER_DETAILS, Bad Part Number');
  PROCESS_ORDERS.ADD_ORDER_DETAILS(1004, 16, 100);  
  commit;
END;
/

-- Testing Exceptions in SHIP_ORDER --
BEGIN 
  DBMS_OUTPUT.PUT_LINE('Breaking SHIP_ORDER, Bad Order Number');
  PROCESS_ORDERS.SHIP_ORDER(16, NULL);
  commit;
END;
/

-- Testing Exceptions in DELETE_ORDER --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Breaking DELETE_ORDER, Bad Order Number');
  PROCESS_ORDERS.DELETE_ORDER(16);
  commit;
END;
/

-- Testing Exceptions in TOTAL_EMP_SALES --
BEGIN
  DBMS_OUTPUT.PUT_LINE('Breaking TOTAL_EMP_SALES, Bad Employee Number');
  DBMS_OUTPUT.PUT_LINE(PROCESS_ORDERS.TOTAL_EMP_SALES(12));
END;
/

